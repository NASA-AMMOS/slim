"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3862],{12142:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"guides/software-lifecycle/security/container-vulnerability-scanning/README","title":"Container Vulnerability Scanning","description":"A guide to scanning containers and container repositories for security vulnerabilities both manually and automatically.","source":"@site/docs/guides/software-lifecycle/security/container-vulnerability-scanning/README.mdx","sourceDirName":"guides/software-lifecycle/security/container-vulnerability-scanning","slug":"/guides/software-lifecycle/security/container-vulnerability-scanning/","permalink":"/slim/docs/guides/software-lifecycle/security/container-vulnerability-scanning/","draft":false,"unlisted":false,"editUrl":"https://github.com/nasa-ammos/slim/tree/main/docs/guides/software-lifecycle/security/container-vulnerability-scanning/README.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"guidesSidebar","previous":{"title":"Security","permalink":"/slim/docs/category/security"},"next":{"title":"GitHub Security Best Practices","permalink":"/slim/docs/guides/software-lifecycle/security/github-security/"}}');var s=i(74848),t=i(28453),l=i(21028);const a="repos:\n  - repo: local\n    hooks:\n      - id: grype-cve-scan\n        name: Grype Vulnerability Scan\n        description: Scans for dependency vulnerabilities. Fails if CRITICAL vulnerabilities detected.\n        entry: python -c \"import os; import subprocess; import sys; os.environ['GRYPE_DB_AUTO_UPDATE'] = 'false'; result=subprocess.run(['grype', 'dir:.', '--fail-on', 'critical'], capture_output=True); print(result.stdout.decode()); print('CRITICAL level vulnerabilities found. To address issues, run scan via `grype dir:.`, then `git add` followed by `git commit` your fix or ignore via `git commit --no-verify`') if result.returncode != 0 else print('No CRITICAL level vulnerabilities found.'); sys.exit(result.returncode)\"\n        language: system\n        verbose: true\n        stages: [pre-push]",o={},c="Container Vulnerability Scanning",d={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Step-by-Step Guide",id:"step-by-step-guide",level:2},{value:"Step 1: Scan Locally for Container Vulnerabilities",id:"step-1-scan-locally-for-container-vulnerabilities",level:3},{value:"Step 2: Setup Automated Local Scanning of Container Vulnerabilities",id:"step-2-setup-automated-local-scanning-of-container-vulnerabilities",level:3},{value:"Step 3: Set Up Automated Repository Scanning",id:"step-3-set-up-automated-repository-scanning",level:3},{value:"Frequently Asked Questions (FAQ)",id:"frequently-asked-questions-faq",level:2},{value:"Credits",id:"credits",level:2},{value:"Feedback and Contributions",id:"feedback-and-contributions",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"container-vulnerability-scanning",children:"Container Vulnerability Scanning"})}),"\n",(0,s.jsx)("pre",{align:"center",children:"A guide to scanning containers and container repositories for security vulnerabilities both manually and automatically."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"banner-image",src:i(57682).A+"",width:"1060",height:"368"})}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Background"}),": To maintain the integrity and security of your containers in production environments, it's essential to monitor dependency vulnerabilities. Third-party software dependencies can harbor security vulnerabilities. This guide focuses on utilizing Grype, an open source vulnerability scanner, to proactively detect vulnerabilities in dependencies defined within container images as well as generally within repositories that use package managers."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Use Cases"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Scanning container images for vulnerabilities during the development phase"}),"\n",(0,s.jsx)(n.li,{children:"Ensuring base container images are as vulnerability-free as possible"}),"\n",(0,s.jsx)(n.li,{children:"Scanning package-manager defined software dependencies (e.g. NPM, YARN, Maven, etc.) for vulnerabilities during the development phase"}),"\n",(0,s.jsx)(n.li,{children:"Automating vulnerability detection in repositories"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Software:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"OCI compliant containers (e.g. Docker, Podman) or other package-manager software dependencies"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pre-commit"})," framework"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Skills:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Basic knowledge of Git hooks and Docker commands"}),"\n",(0,s.jsx)(n.li,{children:"Understanding of YAML for pre-commit configuration"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Run a local scan of your container's repository (folder containing the Dockerfile) using ",(0,s.jsx)(n.a,{href:"https://github.com/anchore/grype",children:"Grype"})]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"grype dir:.\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Run a local scan of a Docker image using Grype"})}),"\n",(0,s.jsx)(n.p,{children:"First, build the Docker image:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker build -t my-app:latest .\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then, scan the built Docker image:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"grype my-app:latest\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["\u2b07\ufe0f ",(0,s.jsx)(n.a,{href:"pathname:///assets/software-lifecycle/security/container-vulnerability-scanning/pre-commit-config.yml",children:"Grype Scanning .pre-commit-config.yml"})]})}),"\n",(0,s.jsx)(n.p,{children:"Download the file above to access the pre-commit configuration file, which includes an example hook for Grype vulnerability scanning. This file should be placed within your local Git repository after installing the pre-commit framework."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["\u2b07\ufe0f ",(0,s.jsx)(n.a,{href:"https://github.com/marketplace/actions/anchore-container-scan",children:"Grype GitHub Action"})]})}),"\n",(0,s.jsx)(n.p,{children:"GitHub Action for Grype vulnerability scanning."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-by-step-guide",children:"Step-by-Step Guide"}),"\n",(0,s.jsx)(n.h3,{id:"step-1-scan-locally-for-container-vulnerabilities",children:"Step 1: Scan Locally for Container Vulnerabilities"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Ensure Grype is installed on your system. You can install Grype from ",(0,s.jsx)(n.a,{href:"https://github.com/anchore/grype",children:"the official repository"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"grype version\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Perform a scan of the local repository for vulnerabilities. The below checks for vulnerabilities via any common package managers that are detected in your repository. See ",(0,s.jsx)(n.a,{href:"https://github.com/anchore/grype?tab=readme-ov-file#supported-sources",children:"Grype supported sources"})," for more information."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"grype dir:.\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"To scan a Docker image, first build the Docker image:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker build -t my-app:latest .\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Then, perform a scan of the built Docker image:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"grype my-app:latest\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"If you find vulnerabilities, fix them via your package manager."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"step-2-setup-automated-local-scanning-of-container-vulnerabilities",children:"Step 2: Setup Automated Local Scanning of Container Vulnerabilities"}),"\n",(0,s.jsx)(n.p,{children:"\u26a0\ufe0f NOTE: We recommend installing this pre-commit hook only if you have downloaded grype, already scanned your repository and addressed any vulnerabilities."}),"\n",(0,s.jsxs)(n.p,{children:["\u26a0\ufe0f NOTE: The automated scan described below will NOT check for image vulnerabilities, rather, it uses the package dependency capability of Grype to look for third-party dependencies via ",(0,s.jsx)(n.code,{children:"grype dir:."})]}),"\n",(0,s.jsxs)(n.p,{children:["The below steps, once enacted, will ensure that any local ",(0,s.jsx)(n.code,{children:"git push"})," actions taken will be followed by an automated vulnerability scan. If vulnerabilities at the CRITICAL level are found, the push will be blocked by default."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Install the pre-commit framework via Python:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install pre-commit\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:".pre-commit-config.yaml"})," file in the root directory of your Git repository with the following content for Grype scanning:"]}),"\n",(0,s.jsx)(l.A,{language:"yaml",children:a}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Initialize pre-commit in your repository with the new configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pre-commit install\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Grype-based vulnerability scanning should run every time a ",(0,s.jsx)(n.code,{children:"git push"})," is invoked. The push will be blocked if CRITICAL level vulnerabilities are found and will ask the developer to fix them prior to committing. Otherwise a report will be provided for reference."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"step-3-set-up-automated-repository-scanning",children:"Step 3: Set Up Automated Repository Scanning"}),"\n",(0,s.jsx)(n.p,{children:"For GitHub users, we recommend:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Installing the official Grype GitHub action to set up automated dependency vulnerability scanning. The tool is available ",(0,s.jsx)(n.a,{href:"https://github.com/marketplace/actions/anchore-container-scan",children:"at this link"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Setting up GitHub's official Dependabot action to also look for vulnerabilities. See our ",(0,s.jsx)(n.a,{href:"/docs/guides/software-lifecycle/security/github-security",children:"GitHub Security Guide"})," on this."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"frequently-asked-questions-faq",children:"Frequently Asked Questions (FAQ)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Q: What happens if the pre-commit scan finds vulnerabilities?"})}),"\n",(0,s.jsxs)(n.p,{children:["A: The pre-commit hook will prevent you from committing changes until the vulnerabilities are resolved. The scan is set to alert only for ",(0,s.jsx)(n.code,{children:"critical"})," vulnerabilities by default to minimize disruption."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Q: What if I want to skip the pre-commit scan temporarily?"})}),"\n",(0,s.jsxs)(n.p,{children:["A: You can bypass the hook by using the ",(0,s.jsx)(n.code,{children:"--no-verify"})," flag with the ",(0,s.jsx)(n.code,{children:"git commit"})," command, though this is generally not recommended."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Q: Is it possible to run vulnerability scans without pre-commit hooks?"})}),"\n",(0,s.jsx)(n.p,{children:"A: Yes, you can incorporate scans into your CI/CD pipeline or utilize other repository scanning tools, which can prevent pushing vulnerable code."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Q: What's the difference between Grype and GitHub's Dependabot? Why do I need both?"})}),"\n",(0,s.jsx)(n.p,{children:"A: Grype relies on free and open software vulnerability databases whereas GitHub's Dependabot may be using proprietary methods. In our testing, we've found some non-overlapping vulnerabilities that are sometimes found in one tool but not the other."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"credits",children:"Credits"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Authorship"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.github.com/riverma",children:"Rishi Verma"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Acknowledgements"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"OPERA SDS Project for implementation guidance"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/ddalton-swe",children:"@ddalton-swe"})," for tool suggestions"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"feedback-and-contributions",children:"Feedback and Contributions"}),"\n",(0,s.jsxs)(n.p,{children:["We welcome feedback and contributions to enhance this guide further. Please refer to our ",(0,s.jsx)(n.a,{href:"https://nasa-ammos.github.io/slim/docs/contribute/contributing/",children:"contribution guidelines"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},57682:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/vulnerability-scanning-screen-57ff8ea9c83b29e0d64c26361906d042.png"}}]);