"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8909],{19680:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/files/pypi-cd-template-cac7a7a0d3f5806ee6451c68d396f70d.yml"},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var s=i(96540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},93197:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"guides/software-lifecycle/continuous-delivery/readme","title":"Continuous Delivery","description":"A streamlined guide to setting up a robust continuous delivery pipeline, automating releases, and maintaining best practices.","source":"@site/docs/guides/software-lifecycle/continuous-delivery/readme.md","sourceDirName":"guides/software-lifecycle/continuous-delivery","slug":"/guides/software-lifecycle/continuous-delivery/","permalink":"/slim/docs/guides/software-lifecycle/continuous-delivery/","draft":false,"unlisted":false,"editUrl":"https://github.com/nasa-ammos/slim/tree/main/docs/guides/software-lifecycle/continuous-delivery/readme.md","tags":[],"version":"current","frontMatter":{"title":"Continuous Delivery","description":"A streamlined guide to setting up a robust continuous delivery pipeline, automating releases, and maintaining best practices."},"sidebar":"guidesSidebar","previous":{"title":"Secrets Detection","permalink":"/slim/docs/guides/software-lifecycle/security/secrets-detection/"},"next":{"title":"Continuous Integration","permalink":"/slim/docs/guides/software-lifecycle/continuous-integration/"}}');var t=i(74848),r=i(28453);const a={title:"Continuous Delivery",description:"A streamlined guide to setting up a robust continuous delivery pipeline, automating releases, and maintaining best practices."},l="Continuous Delivery",o={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Background",id:"background",level:3},{value:"Approach",id:"approach",level:3},{value:"Key Use Cases",id:"key-use-cases",level:3},{value:"Quick Start",id:"quick-start",level:2},{value:"Step-by-Step Guide",id:"step-by-step-guide",level:2},{value:"1. Select Package Repositories",id:"1-select-package-repositories",level:3},{value:"1.1 Code Packages",id:"11-code-packages",level:4},{value:"Python Packages",id:"python-packages",level:5},{value:"Java Packages",id:"java-packages",level:5},{value:"NodeJS Packages",id:"nodejs-packages",level:5},{value:"1.2 Container Images",id:"12-container-images",level:4},{value:"Public Containers",id:"public-containers",level:5},{value:"Private Containers",id:"private-containers",level:5},{value:"1.3 Test Data",id:"13-test-data",level:4},{value:"Small Datasets (less than 2GB)",id:"small-datasets-less-than-2gb",level:5},{value:"Medium Datasets (2GB-100GB)",id:"medium-datasets-2gb-100gb",level:5},{value:"Large Datasets (greater than 100GB)",id:"large-datasets-greater-than-100gb",level:5},{value:"2. Implement Naming Conventions",id:"2-implement-naming-conventions",level:3},{value:"2.1 Package Naming",id:"21-package-naming",level:4},{value:"2.2 Version Naming",id:"22-version-naming",level:4},{value:"3. Automate Publishing",id:"3-automate-publishing",level:3},{value:"3.1 GitHub Actions Workflow",id:"31-github-actions-workflow",level:4},{value:"3.2 Automated Testing Integration",id:"32-automated-testing-integration",level:4},{value:"4. Maintain Delivery Pipeline",id:"4-maintain-delivery-pipeline",level:3},{value:"5. GitHub Actions Workflow Example for PyPI Project Continuous Delivery",id:"5-github-actions-workflow-example-for-pypi-project-continuous-delivery",level:3},{value:"Frequently Asked Questions (FAQ)",id:"frequently-asked-questions-faq",level:2},{value:"Credits",id:"credits",level:2},{value:"Feedback and Contributions",id:"feedback-and-contributions",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"continuous-delivery",children:"Continuous Delivery"})}),"\n",(0,t.jsx)("pre",{align:"center",children:"A streamlined guide to setting up a robust continuous delivery pipeline, automating releases, and maintaining best practices."}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.h3,{id:"background",children:"Background"}),"\n",(0,t.jsx)(n.p,{children:"Continuous Delivery (CD) is the practice of automatically preparing code changes for production release, extending Continuous Integration (CI) to ensure that every validated change is always production-ready. This guide presents a simplified, practical approach to implementing CD through standardized repository selections, naming conventions, and automation."}),"\n",(0,t.jsx)(n.h3,{id:"approach",children:"Approach"}),"\n",(0,t.jsx)(n.p,{children:"Adopt a clear, four-step plan to implement Continuous Delivery effectively:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Choose repositories"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Adopt standardized naming conventions"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automate publishing"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Maintain the delivery pipeline"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TD\n    Repository[Choose Repositories] --\x3e Naming[Adopt Naming <br/>Conventions] --\x3e Automate[Automate Publishing]\n    Automate --\x3e Maintain[Maintain Pipeline]\n    Maintain --\x3e Repository"}),"\n",(0,t.jsx)(n.h3,{id:"key-use-cases",children:"Key Use Cases"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Auto-publishing built artifacts to package managers."}),"\n",(0,t.jsx)(n.li,{children:"Standardizing naming conventions across repositories."}),"\n",(0,t.jsx)(n.li,{children:"Versioning releases using semantic versioning."}),"\n",(0,t.jsx)(n.li,{children:"Distributing test data automatically."}),"\n",(0,t.jsx)(n.li,{children:"Automating container image publication."}),"\n",(0,t.jsx)(n.li,{children:"Enabling infrastructure-as-code deployment."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(n.p,{children:"The most important step in setting up continuous delivery is choosing the right repositories and implementing proper naming conventions."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Key Concepts to Get Started:"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#1-select-package-repositories",children:"\u2b07\ufe0f Choose a Package Repository"})})," based on your artifact type:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"PyPI for Python packages"}),"\n",(0,t.jsx)(n.li,{children:"Maven Central for Java"}),"\n",(0,t.jsx)(n.li,{children:"NPM Registry for NodeJS"}),"\n",(0,t.jsx)(n.li,{children:"ECR (Amazon Elastic Container Registry)/DockerHub for Containers"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["\ud83d\udcdd Implement ",(0,t.jsx)(n.a,{href:"#2-implement-naming-conventions",children:"Standardized Naming Conventions"}),":"]})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nasa-[project-org]-[module-name]"})," for Python"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gov.nasa.[project-org].[module-name]"})," for Java"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@nasa-[project-org]/[module-name]"})," for NodeJS"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:["\ud83d\ude80 Set up ",(0,t.jsx)(n.a,{href:"#3-automate-publishing",children:"Automated Publishing"})]})," using GitHub Actions"]}),"\n",(0,t.jsx)(n.h2,{id:"step-by-step-guide",children:"Step-by-Step Guide"}),"\n",(0,t.jsx)(n.h3,{id:"1-select-package-repositories",children:"1. Select Package Repositories"}),"\n",(0,t.jsx)(n.p,{children:"Choose appropriate repositories based on your artifact type:"}),"\n",(0,t.jsx)(n.h4,{id:"11-code-packages",children:"1.1 Code Packages"}),"\n",(0,t.jsx)(n.h5,{id:"python-packages",children:"Python Packages"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Repository"}),": PyPI"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Size Limit"}),": 60MB"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cost"}),": Free"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Best For"}),": Python libraries and tools"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Setup Steps"}),":","\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create account on PyPI"}),"\n",(0,t.jsxs)(n.li,{children:["Set up project with ",(0,t.jsx)(n.code,{children:"setup.py"})," or ",(0,t.jsx)(n.code,{children:"pyproject.toml"})]}),"\n",(0,t.jsx)(n.li,{children:"Configure automated publishing"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"java-packages",children:"Java Packages"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Repository"}),": Maven Central"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Size Limit"}),": No specific limit"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cost"}),": Free"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Best For"}),": Java libraries and frameworks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Setup Steps"}),":","\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create Sonatype account"}),"\n",(0,t.jsx)(n.li,{children:"Configure Maven settings"}),"\n",(0,t.jsx)(n.li,{children:"Set up GPG signing"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"nodejs-packages",children:"NodeJS Packages"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Repository"}),": NPM Registry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Size Limit"}),": No specific limit"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cost"}),": Free"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Best For"}),": JavaScript/TypeScript packages"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Setup Steps"}),":","\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create NPM account"}),"\n",(0,t.jsx)(n.li,{children:"Configure package.json"}),"\n",(0,t.jsx)(n.li,{children:"Set up automated publishing"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"12-container-images",children:"1.2 Container Images"}),"\n",(0,t.jsx)(n.h5,{id:"public-containers",children:"Public Containers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Repository"}),": GitHub Packages/GitLab Registry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Best For"}),": Open source projects"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Limitations"}),": Higher latency for runtime"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"private-containers",children:"Private Containers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Repository"}),": Amazon ECR"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Best For"}),": Production deployments"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Features"}),": Low-latency pulls, private repos"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"13-test-data",children:"1.3 Test Data"}),"\n",(0,t.jsx)(n.h5,{id:"small-datasets-less-than-2gb",children:"Small Datasets (less than 2GB)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Repository"}),": GitHub/GitLab Releases"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Naming"}),": ",(0,t.jsx)(n.code,{children:"[project-org]-[project-module]-test-dataset"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Best For"}),": Unit test data, small samples"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"medium-datasets-2gb-100gb",children:"Medium Datasets (2GB-100GB)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Repository"}),": Amazon S3"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Features"}),": Pre-signed URLs, bandwidth control"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Best For"}),": Integration test data"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"large-datasets-greater-than-100gb",children:"Large Datasets (greater than 100GB)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Repository"}),": EOSDIS DAAC (Earth data) or PDS (Planetary data)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Best For"}),": Mission data, large-scale testing"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-implement-naming-conventions",children:"2. Implement Naming Conventions"}),"\n",(0,t.jsx)(n.h4,{id:"21-package-naming",children:"2.1 Package Naming"}),"\n",(0,t.jsx)(n.p,{children:"Follow standard naming conventions for each repository type:"}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TD\n    A[Package Type] --\x3e B{Language?}\n    B --\x3e|Python| C[nasa-project-module]\n    B --\x3e|Java| D[gov.nasa.project.module]\n    B --\x3e|NodeJS| E[_at_nasa-project/module]"}),"\n",(0,t.jsx)(n.h4,{id:"22-version-naming",children:"2.2 Version Naming"}),"\n",(0,t.jsx)(n.p,{children:"Use semantic versioning (MAJOR.MINOR.PATCH):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"MAJOR: Breaking changes"}),"\n",(0,t.jsx)(n.li,{children:"MINOR: New features, backward compatible"}),"\n",(0,t.jsx)(n.li,{children:"PATCH: Bug fixes"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-automate-publishing",children:"3. Automate Publishing"}),"\n",(0,t.jsx)(n.h4,{id:"31-github-actions-workflow",children:"3.1 GitHub Actions Workflow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"name: Publish Package\n\non:\n  release:\n    types: [published]\n\njobs:\n  publish:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - name: Set up environment\n        uses: actions/setup-python@v3\n        with:\n          python-version: '3.x'\n      - name: Build and publish\n        env:\n          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}\n          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}\n        run: |\n          python -m pip install build twine\n          python -m build\n          python -m twine upload dist/*\n"})}),"\n",(0,t.jsx)(n.h4,{id:"32-automated-testing-integration",children:"3.2 Automated Testing Integration"}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TD\n    A[Code Change] --\x3e B[Run Tests]\n    B --\x3e C{Tests Pass?}\n    C --\x3e|Yes| D[Build Artifact]\n    C --\x3e|No| E[Fix Issues]\n    D --\x3e F[Publish to Repository]"}),"\n",(0,t.jsx)(n.h3,{id:"4-maintain-delivery-pipeline",children:"4. Maintain Delivery Pipeline"}),"\n",(0,t.jsx)(n.p,{children:"Regular maintenance tasks:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Update repository credentials"}),"\n",(0,t.jsx)(n.li,{children:"Monitor publishing success rates"}),"\n",(0,t.jsx)(n.li,{children:"Verify artifact integrity"}),"\n",(0,t.jsx)(n.li,{children:"Review and update workflows"}),"\n",(0,t.jsx)(n.li,{children:"Clean up old artifacts"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"5-github-actions-workflow-example-for-pypi-project-continuous-delivery",children:"5. GitHub Actions Workflow Example for PyPI Project Continuous Delivery"}),"\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:".github/workflows/pypi-cd.yml"})," file in your GitHub repository with the following ",(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(19680).A+"",children:"content"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"name: Continuous Delivery for PyPI Project\n\non:\n  push:\n    branches:\n      - main  # Trigger on push to the 'main' branch\n    tags:\n      - 'v*.*.*'  # Trigger on tags matching semantic versioning (v1.0.0)\n\njobs:\n  # Job to set up the environment, install dependencies, and publish to PyPI\n  publish-to-pypi:\n    runs-on: ubuntu-latest\n\n    steps:\n    - name: Checkout repository\n      uses: actions/checkout@v3\n\n    - name: Set up Python\n      uses: actions/setup-python@v3\n      with:\n        python-version: '3.x'  # Use a specific Python version, e.g., '3.8', '3.9', etc.\n\n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install build twine  # Required for building and publishing to PyPI\n\n    - name: Build the package\n      run: |\n        python -m build  # This creates the distribution files under the 'dist' directory\n\n    - name: Publish package to PyPI\n      env:\n        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}  # Store PyPI credentials as GitHub secrets\n        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}\n      run: |\n        python -m twine upload dist/*  # Uploads the package to PyPI\n"})}),"\n",(0,t.jsx)(n.h2,{id:"frequently-asked-questions-faq",children:"Frequently Asked Questions (FAQ)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Q: How do I handle dependencies between packages?"})}),"\n",(0,t.jsx)(n.p,{children:"A: Use semantic versioning and dependency ranges to manage package relationships."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Q: What about handling sensitive data in artifacts?"})}),"\n",(0,t.jsx)(n.p,{children:"A: Use private repositories and encrypted secrets in CI/CD pipelines."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Q: How often should artifacts be published?"})}),"\n",(0,t.jsx)(n.p,{children:"A: Publish on every tagged release for stable versions, and optionally for development versions."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Q: How to manage large binary artifacts?"})}),"\n",(0,t.jsx)(n.p,{children:"A: Use specialized repositories like Amazon S3 for large artifacts and reference them in package metadata."}),"\n",(0,t.jsx)(n.h2,{id:"credits",children:"Credits"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Authorship"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/yunks128",children:"Kyongsik Yun"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Acknowledgements"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Thanks to the SLIM team for providing guidance"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"feedback-and-contributions",children:"Feedback and Contributions"}),"\n",(0,t.jsxs)(n.p,{children:["We welcome feedback and contributions to help improve and grow this page. Please see our ",(0,t.jsx)(n.a,{href:"https://nasa-ammos.github.io/slim/docs/contribute/contributing/",children:"contribution guidelines"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);