"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4173],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>k});var i=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,i,r=function(e,t){if(null==e)return{};var a,i,r={},n=Object.keys(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=i.createContext({}),s=function(e){var t=i.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(a),d=r,k=u["".concat(p,".").concat(d)]||u[d]||c[d]||n;return a?i.createElement(k,o(o({ref:t},m),{},{components:a})):i.createElement(k,o({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,o=new Array(n);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<n;s++)o[s]=a[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5067:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>n,metadata:()=>l,toc:()=>s});var i=a(7462),r=(a(7294),a(3905));const n={},o="Python Starter Kit",l={unversionedId:"guides/software-lifecycle/application-starter-kits/python-starter-kit/README",id:"guides/software-lifecycle/application-starter-kits/python-starter-kit/README",title:"Python Starter Kit",description:"A complete, deployment-ready Python 3 application that's bundled into a reusable template repository for quick implementation.",source:"@site/docs/guides/software-lifecycle/application-starter-kits/python-starter-kit/README.md",sourceDirName:"guides/software-lifecycle/application-starter-kits/python-starter-kit",slug:"/guides/software-lifecycle/application-starter-kits/python-starter-kit/",permalink:"/slim/docs/guides/software-lifecycle/application-starter-kits/python-starter-kit/",draft:!1,editUrl:"https://github.com/nasa-ammos/slim/tree/main/docs/guides/software-lifecycle/application-starter-kits/python-starter-kit/README.md",tags:[],version:"current",frontMatter:{},sidebar:"guidesSidebar",previous:{title:"Application Starter Kits",permalink:"/slim/docs/guides/software-lifecycle/application-starter-kits/"},next:{title:"Continuous Integration",permalink:"/slim/docs/guides/software-lifecycle/continuous-integration/"}},p={},s=[{value:"Integrated Build, Release and Publish on GitHub",id:"integrated-build-release-and-publish-on-github",level:4},{value:"Deliverables",id:"deliverables",level:4}],m={toc:s},u="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,i.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"python-starter-kit"},"Python Starter Kit"),(0,r.kt)("p",null,"A complete, deployment-ready Python 3 application that's bundled into a reusable template repository for quick implementation."),(0,r.kt)("h4",{id:"integrated-build-release-and-publish-on-github"},"Integrated Build, Release and Publish on GitHub"),(0,r.kt)("p",null,"This product demonstrates a GitHub-based strategy of ",(0,r.kt)("a",{parentName:"p",href:"docs/guides/software-lifecycle/continuous-integration/reference-architecture"},"end-to-end CI automation")," using modern Python tooling to demonstrate publishing on release."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Build automation using ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/"},"GitHub"),", ",(0,r.kt)("a",{parentName:"li",href:"https://www.docker.com/"},"Docker"),", ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/features/actions"},"GitHub Actions")," and ",(0,r.kt)("a",{parentName:"li",href:"https://pypi.org/"},"PyPi")),(0,r.kt)("li",{parentName:"ul"},"Compile, tag and release, and publish to the ",(0,r.kt)("a",{parentName:"li",href:"https://pypi.org/"},"Python Package Index (PyPi)")),(0,r.kt)("li",{parentName:"ul"},"Modern ",(0,r.kt)("a",{parentName:"li",href:"https://peps.python.org/pep-0517/"},"PEP 517"),"/",(0,r.kt)("a",{parentName:"li",href:"https://peps.python.org/pep-0518/"},"518")," compliant tooling using ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Declarative_programming"},"declarative")," ",(0,r.kt)("a",{parentName:"li",href:"https://toml.io/en/"},"TOML"),"-based configurations inside a ",(0,r.kt)("inlineCode",{parentName:"li"},"pyproject.toml")," file.")),(0,r.kt)("p",null,"Starter Kit:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python"},"SLIM Starterkit Python"))),(0,r.kt)("p",null,"To leverage this template, make sure to do the following:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Discuss with your development team continuous integration best practices and seek consensus on a workflow to build, publish and release software. "),(0,r.kt)("li",{parentName:"ol"},"Create a new repository by one of the following methods:",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/generate"},"Creating a new repository using our repository template")," (GitHub only); or "),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python"},"Cloning and manually editing our starter kit repository"),". ",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Requirement"),(0,r.kt)("br",{parentName:"p"}),"\n","\u2022 ",(0,r.kt)("a",{parentName:"p",href:"http://agiledata.org/essays/sandboxes.html"},"Sandbox strategy"),": Two separate accounts must be created on ",(0,r.kt)("strong",{parentName:"p"},"(1) Test PyPi")," and ",(0,r.kt)("strong",{parentName:"p"},"(2) PyPi"),". We'll ",(0,r.kt)("em",{parentName:"p"},"name values identically")," and switch them later when everything works.",(0,r.kt)("br",{parentName:"p"}),"\n","\u2022 Admin rights are necessary to set up ",(0,r.kt)("inlineCode",{parentName:"p"},"GitHub Secrets"),".  "))))),(0,r.kt)("li",{parentName:"ol"},"Setup account credentials:",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://test.pypi.org/account/register/"},"Test PyPi")," website",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Navigate to ",(0,r.kt)("inlineCode",{parentName:"li"},"Account Settings")," ",(0,r.kt)("strong",{parentName:"li"},"->")," ",(0,r.kt)("inlineCode",{parentName:"li"},"API tokens")," and press the button ",(0,r.kt)("inlineCode",{parentName:"li"},"Add API Token"),". Name your token ",(0,r.kt)("inlineCode",{parentName:"li"},"PYPI_API_TOKEN")," and generate it."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Copy the value")," and retain this ",(0,r.kt)("a",{parentName:"li",href:"https://test.pypi.org/manage/account/token/"},"Test PyPi token")," to use in ",(0,r.kt)("inlineCode",{parentName:"li"},"GitHub Secrets"),"."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://pypi.org/account/register/"},"PyPi")," website",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Navigate to ",(0,r.kt)("inlineCode",{parentName:"li"},"Account Settings")," ",(0,r.kt)("strong",{parentName:"li"},"->")," ",(0,r.kt)("inlineCode",{parentName:"li"},"API tokens")," and press the button ",(0,r.kt)("inlineCode",{parentName:"li"},"Add API Token"),". Name your token ",(0,r.kt)("inlineCode",{parentName:"li"},"PYPI_API_TOKEN")," and generate it."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Copy the value")," and retain this ",(0,r.kt)("a",{parentName:"li",href:"https://pypi.org/manage/account/token/"},"PyPi token")," to use ",(0,r.kt)("strong",{parentName:"li"},"later"),"."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/security-guides/encrypted-secrets?tool=webui#creating-encrypted-secrets-for-a-repository"},"GitHub Secrets")," (use the ",(0,r.kt)("em",{parentName:"li"},"Test PyPi token")," here initially) in your newly created repository",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  1. In the repository, select the `Settings` tab and navigate to `Security`: `Secrets and variables` **--\x3e** `Actions` and press the button `New repository secret`.\n  2. Name your secret `PYPI_API_TOKEN` and paste the value from **Test PyPi**. (Later, this value will be replaced with the actual **PyPi** token to enable public release.)\n")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Shortcut"),(0,r.kt)("br",{parentName:"p"}),"\n","Already skilled with Python ",(0,r.kt)("a",{parentName:"p",href:"https://setuptools.pypa.io/en/latest/userguide/index.html"},"Setuptools")," build system? You may selectively apply files from the starter kit to your own project using details below. "))))),(0,r.kt)("li",{parentName:"ol"},"Choose a ",(0,r.kt)("a",{parentName:"li",href:"https://peps.python.org/pep-0008/#package-and-module-names"},"unique name for your Python 3 module"),". The name shouldn't duplicate any of the ",(0,r.kt)("a",{parentName:"li",href:"https://pypi.org/search/?q="},"currently published modules in PyPi"),"."),(0,r.kt)("li",{parentName:"ol"},"Move code into place",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"New project?")," Rename the existing ",(0,r.kt)("inlineCode",{parentName:"li"},"slim_sample_project")," directory to your unique module name. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/blob/main/slim_sample_project/hello_world.py"},"Rename ",(0,r.kt)("inlineCode",{parentName:"a"},"hello_world.py"))," to reflect your application and start developing.",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Don't remove versioning system files (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/blob/main/slim_sample_project/version.py"},(0,r.kt)("inlineCode",{parentName:"a"},"version.py"))," and ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/blob/main/slim_sample_project/version_tooling.py"},(0,r.kt)("inlineCode",{parentName:"a"},"version_tooling.py")),") that support build tooling. "),(0,r.kt)("li",{parentName:"ol"},"You'll have to ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/blob/main/slim_sample_project/hello_world.py#L6"},"keep the local module import of ",(0,r.kt)("inlineCode",{parentName:"a"},"version_tooling"))," to take advantage of build version automation."),(0,r.kt)("li",{parentName:"ol"},"Consider ",(0,r.kt)("a",{parentName:"li",href:"https://martinfowler.com/bliki/SoftwareComponent.html"},"organizing code into smaller, encapsulated component files")," that may be imported from the ",(0,r.kt)("inlineCode",{parentName:"li"},"api")," directory."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Existing code?")," Move the directory containing your Python 3 code into the new project and rename it to match your unique module name. ",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  1. Copy versioning system files ([`version.py`](https://github.com/NASA-AMMOS/slim-starterkit-python/blob/main/slim_sample_project/version.py) and [`version_tooling.py`](https://github.com/NASA-AMMOS/slim-starterkit-python/blob/main/slim_sample_project/version_tooling.py)) from the `slim_sample_project` that support build tooling.\n  2. Add the [local module import of `version_tooling`](https://github.com/NASA-AMMOS/slim-starterkit-python/blob/main/slim_sample_project/hello_world.py#L6) to your Python 3 [top-level file](https://docs.python.org/3/library/__main__.html#what-is-the-top-level-code-environment) or [entry-point script](https://setuptools.pypa.io/en/latest/userguide/entry_point.html#console-scripts).\n")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Shortcut"),(0,r.kt)("br",{parentName:"p"}),"\n","Lines requiring code updates are commented with the keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"MODIFY"),".",(0,r.kt)("br",{parentName:"p"}),"\n","Documentation requiring updates are marked with the keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"INSERT"),"."))))),(0,r.kt)("li",{parentName:"ol"},"Apply project settings and customizations",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Update ",(0,r.kt)("inlineCode",{parentName:"li"},"pyproject.toml")," to update build system dependencies",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/blob/main/pyproject.toml#L12"},"Edit the ",(0,r.kt)("inlineCode",{parentName:"a"},"write_to")," variable")," to point to the directory containing your Python 3 code."))),(0,r.kt)("li",{parentName:"ol"},"Update ",(0,r.kt)("inlineCode",{parentName:"li"},"setup.cfg")," to specify build system configurations",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/blob/main/setup.cfg#L4"},"Edit the metadata keywords")," to set appropriate ",(0,r.kt)("a",{parentName:"li",href:"https://setuptools.pypa.io/en/latest/references/keywords.html"},"keyword values")," to apply to your project.",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"name")," to match your unique module name. "),(0,r.kt)("li",{parentName:"ol"},"Modify ",(0,r.kt)("inlineCode",{parentName:"li"},"console_scripts")," to point at your entry-point:",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"If your ",(0,r.kt)("a",{parentName:"li",href:"https://setuptools.pypa.io/en/latest/userguide/entry_point.html#entry-points"},"module launches from a command-line"),", define an executable inside your module: ",(0,r.kt)("inlineCode",{parentName:"li"},"executable-name = my_package.module:function"),"."),(0,r.kt)("li",{parentName:"ol"},"Set the value as empty if there is no entry-point."))),(0,r.kt)("li",{parentName:"ol"},"Update URLs for your project.",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Replace ",(0,r.kt)("inlineCode",{parentName:"li"},"NASA-AMMOS/slim-starterkit-python")," with the ",(0,r.kt)("strong",{parentName:"li"},"project/repo_name")," for your cloned project."))),(0,r.kt)("li",{parentName:"ol"},"Update ",(0,r.kt)("inlineCode",{parentName:"li"},"author"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"author_email"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"description")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"keywords")," to reflect your project details"))))),(0,r.kt)("li",{parentName:"ol"},"Update documentation to reflect details about your new project  ",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  1. Suggested updates for `CODE_OF_CONDUCT.md`, `CONTRIBUTING.md` and `README.md` are marked by the keyword `INSERT` and explained in detail within markdown.\n")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Alert"),(0,r.kt)("br",{parentName:"p"}),"\n","Unique development configurations may adversely impact testing on local workstations. Testing should be conducted with a ",(0,r.kt)("a",{parentName:"p",href:"https://www.python.org/downloads/"},"supported python.org release")," or ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/_/python/"},"virtual container as used on GitHub")," ."))))),(0,r.kt)("li",{parentName:"ol"},"Build locally to test the configuration",(0,r.kt)("br",{parentName:"li"}),"The application will build, install and deploy from a local command line when all configurations are properly set.",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/tree/main#required-local-tooling"},"Install local tooling and requirements")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/tree/main#local-build-testing"},"Clean and build")," and clean again after module builds successfully",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Information"),(0,r.kt)("br",{parentName:"p"}),"\n","To validate the module, we test on the Test PyPi sandbox ",(0,r.kt)("em",{parentName:"p"},"by default"),". Then, to release on the official PyPi, a ",(0,r.kt)("em",{parentName:"p"},"minor configuration change is required"),". ",(0,r.kt)("strong",{parentName:"p"},"All previous steps must be complete.")))))),(0,r.kt)("li",{parentName:"ol"},"Build on GitHub",(0,r.kt)("br",{parentName:"li"}),"A release kicks off a build and release process in GitHub Actions. ",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Test publication on Test PyPi",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Update the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/blob/main/slim_sample_project/version.py"},"version number in the ",(0,r.kt)("inlineCode",{parentName:"a"},"version.py")," file"),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/tree/main#automated-build-kickoff"},"Kick off a build by releasing your product using the same version.")),(0,r.kt)("li",{parentName:"ol"},"When the product builds successfully, proceed to step ",(0,r.kt)("strong",{parentName:"li"},"ii"),". ",(0,r.kt)("em",{parentName:"li"},"Otherwise, revisit earlier steps and check for errors or other invalid settings.")))),(0,r.kt)("li",{parentName:"ol"},"Release to PyPi (simple configuration changes point at the release server)",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Update ",(0,r.kt)("inlineCode",{parentName:"li"},"PYPI_API_TOKEN")," to point at PyPi in ",(0,r.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/security-guides/encrypted-secrets?tool=webui#creating-encrypted-secrets-for-a-repository"},"GitHub Secrets")," in your newly created repository ",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"In the repository, select the ",(0,r.kt)("inlineCode",{parentName:"li"},"Settings")," tab and navigate to ",(0,r.kt)("inlineCode",{parentName:"li"},"Security"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Secrets and variables")," ",(0,r.kt)("strong",{parentName:"li"},"--\x3e")," ",(0,r.kt)("inlineCode",{parentName:"li"},"Actions"),". "),(0,r.kt)("li",{parentName:"ol"},"Recalling the PyPi token previously saved in step 3(ii): In ",(0,r.kt)("inlineCode",{parentName:"li"},"Repository secrets"),", edit the ",(0,r.kt)("inlineCode",{parentName:"li"},"PYPI_API_TOKEN")," and paste the saved PyPi token value to update it."))),(0,r.kt)("li",{parentName:"ol"},"Change the ",(0,r.kt)("inlineCode",{parentName:"li"},"python-publish.yml")," configuration to remove Test PyPi coordinates",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Remove '",(0,r.kt)("inlineCode",{parentName:"li"},"--repository testpypi"),"' from the one-line publish command to read: ",(0,r.kt)("inlineCode",{parentName:"li"},"twine upload --verbose dist/*.whl dist/*.zip")," "))),(0,r.kt)("li",{parentName:"ol"},"Update the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/blob/main/slim_sample_project/version.py"},"version number in the ",(0,r.kt)("inlineCode",{parentName:"a"},"version.py")," file"),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/tree/main#automated-build-kickoff"},"Kick off a build by releasing your product using the same version."))))))),(0,r.kt)("h4",{id:"deliverables"},"Deliverables"),(0,r.kt)("p",null,"This starter kit produces several deliverables deployed for distribution:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"GitHub"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/releases/latest"},"Release report with automatic changelog summaries based on commit history.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/tags"},"Tagged build versions corresponding to release versions.")),(0,r.kt)("li",{parentName:"ul"},"Source distribution:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/tags/"},"Tarball")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NASA-AMMOS/slim-starterkit-python/tags/"},"ZIP")))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"PyPi"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://test.pypi.org/project/slim-sample-project/"},"Fully documented site with project links")," "),(0,r.kt)("li",{parentName:"ul"},"Source distribution (with release hashes):",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://test.pypi.org/project/slim-sample-project/#files"},"ZIP")))),(0,r.kt)("li",{parentName:"ul"},"Built Python 3 distribution:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://test.pypi.org/project/slim-sample-project/#files"},"Python wheel"))))))))}c.isMDXComponent=!0}}]);